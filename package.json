{
    "name": "pro-bro",
    "displayName": "ProBro",
    "description": "VS Code extension for browsing Progress OpenEdge DataBases",
    "keywords": [
        "OpenEdge",
        "Progress",
        "DataBase",
        "DB",
        "Explorer"
    ],
    "version": "1.5.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/BalticAmadeus/ProBro"
    },
    "publisher": "BalticAmadeus",
    "engines": {
        "vscode": "^1.67.0"
    },
    "categories": [
        "Programming Languages",
        "Visualization",
        "Other"
    ],
    "icon": "resources/ProBroLogo.png",
    "galleryBanner": {
        "color": "#248bfa",
        "theme": "dark"
    },
    "activationEvents": [
        "onCommand:pro-bro.connect",
        "onLanguage:abl"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "configuration": {
            "title": "pro-bro",
            "properties": {
                "pro-bro.batchSize": {
                    "type": "number",
                    "minimum": 100,
                    "default": 1000,
                    "markdownDescription": "Specifies number of records retrieved in one loading"
                },
                "pro-bro.batchMaxTimeout": {
                    "type": "number",
                    "minimum": 10,
                    "default": 1000,
                    "markdownDescription": "Specifies maximum time in milliseconds to retrieve batch of records"
                },
                "pro-bro.batchMinTimeout": {
                    "type": "number",
                    "minimum": 10,
                    "default": 100,
                    "markdownDescription": "Specifies time in milliseconds to retrieve batch of records"
                },
                "pro-bro.initialBatchSizeLoad": {
                    "type": "number",
                    "minimum": 50,
                    "default": 100,
                    "markdownDescription": "Specifies the initial number of records retrieved when query is opened"
                },
                "pro-bro.possiblePortsList": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65536,
                        "description": "Port number"
                    },
                    "default": [
                        23456,
                        23457,
                        23458,
                        23459
                    ],
                    "markdownDescription": "(Restart needed)\n\n Provide free ports for local ProBro communication. Additional ports are used for additional vsCode instances using ProBro extension.  \n\n The default ProBro extension port is 23456"
                },
                "pro-bro.importConnections": {
                    "type": "boolean",
                    "default": "true",
                    "markdownDescription": "Import connections from openedge-project.json"
                },
                "pro-bro.useWriteTriggers": {
                    "type": "boolean",
                    "default": "true",
                    "markdownDescription": "Use write triggers"
                },
                "pro-bro.tempfiles": {
                    "type": "string",
                    "markdownDescription": "Specifies path where temporary files are created."
                },
                "pro-bro.filterAsYouType": {
                    "type": "boolean",
                    "default": "true",
                    "markdownDescription": "Use filter as you type"
                },
                "pro-bro.logging.react": {
                    "type": "boolean",
                    "markdownDescription": "Log input and output in React part to console"
                },
                "pro-bro.logging.node": {
                    "type": "boolean",
                    "markdownDescription": "Log input and output in Node part to console"
                },
                "pro-bro.logging.openEdge": {
                    "type": "string",
                    "markdownDescription": "Specify one or more log entry types (-logentrytypes) for custom OpenEdge part logging. Reload required."
                },
                "pro-bro.development.useNewDbClient": {
                    "type": "boolean",
                    "default": "false",
                    "markdownDescription": "Use New DB Client implementation"
                }
            }
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "pro-bro",
                    "title": "OpenEdge Explorer",
                    "icon": "resources/pB.svg"
                }
            ],
            "panel": [
                {
                    "id": "pro-bro-fields",
                    "title": "Fields Explorer",
                    "icon": "resources/pB.svg"
                },
                {
                    "id": "pro-bro-indexes",
                    "title": "Indexes Explorer",
                    "icon": "resources/pB.svg"
                }
            ]
        },
        "views": {
            "pro-bro-fields": [
                {
                    "type": "webview",
                    "id": "pro-bro-fields",
                    "name": "Fields Explorer",
                    "contextualTitle": "Fields Explorer",
                    "title": "Fields Explorer"
                }
            ],
            "pro-bro-indexes": [
                {
                    "type": "webview",
                    "id": "pro-bro-indexes",
                    "name": "Indexes Explorer",
                    "contextualTitle": "Indexes Explorer",
                    "title": "Indexes Explorer"
                }
            ],
            "pro-bro": [
                {
                    "id": "pro-bro-databases",
                    "name": "Databases",
                    "contextualTitle": "OpenEdge Explorer",
                    "title": "OpenEdge Explorer"
                },
                {
                    "id": "pro-bro-tables",
                    "name": "Tables",
                    "contextualTitle": "Tables",
                    "title": "Tables"
                }
            ]
        },
        "commands": [
            {
                "command": "pro-bro.refreshList",
                "title": "pro-bro: Refresh",
                "icon": "$(refresh)"
            },
            {
                "command": "pro-bro.refreshConnection",
                "title": "pro-bro: Refresh Connection",
                "icon": "$(refresh)"
            },
            {
                "command": "pro-bro.addEntry",
                "title": "pro-bro: Add Connection",
                "icon": "$(add)"
            },
            {
                "command": "pro-bro.editConnection",
                "title": "pro-bro: Edit Connection",
                "icon": "$(edit)"
            },
            {
                "command": "pro-bro.deleteConnection",
                "title": "pro-bro: Delete Connection",
                "icon": "$(trash)"
            },
            {
                "command": "pro-bro.procedureEditor",
                "title": "pro-bro: Launch Procedure Editor",
                "icon": "$(preview)"
            },
            {
                "command": "pro-bro.dataAdministration",
                "title": "pro-bro: Launch Data Administration",
                "icon": "$(server-environment)"
            },
            {
                "command": "pro-bro.dataDictionary",
                "title": "pro-bro: Launch Data Dictionary",
                "icon": "$(book)"
            },
            {
                "command": "pro-bro.query",
                "title": "pro-bro: Query",
                "icon": "$(play)"
            },
            {
                "command": "pro-bro.list-filter",
                "title": "pro-bro: List Filter",
                "icon": "$(list-filter)"
            },
            {
                "command": "pro-bro.dblClickQuery",
                "title": "DblClickQuery"
            },
            {
                "command": "pro-bro.query2",
                "title": "aaaaaaaaaaaaaaaa"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "pro-bro.refreshList",
                    "when": "view == pro-bro-databases",
                    "group": "navigation"
                },
                {
                    "command": "pro-bro.addEntry",
                    "when": "view == pro-bro-databases",
                    "group": "navigation"
                },
                {
                    "command": "pro-bro.list-filter",
                    "when": "view == pro-bro-tables",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "pro-bro.editConnection",
                    "when": "view == pro-bro-databases && viewItem == dbConnection",
                    "group": "inline"
                },
                {
                    "command": "pro-bro.refreshConnection",
                    "when": "view == pro-bro-databases && viewItem == dbConnection",
                    "group": "inline"
                },
                {
                    "command": "pro-bro.deleteConnection",
                    "when": "view == pro-bro-databases && viewItem == dbConnection",
                    "group": "inline"
                },
                {
                    "command": "pro-bro.dataAdministration",
                    "when": "view == pro-bro-databases && viewItem == dbConnection",
                    "group": "inline"
                },
                {
                    "command": "pro-bro.dataDictionary",
                    "when": "view == pro-bro-databases && viewItem == dbConnection",
                    "group": "inline"
                },
                {
                    "command": "pro-bro.procedureEditor",
                    "when": "view == pro-bro-databases && viewItem == dbConnection",
                    "group": "inline"
                },
                {
                    "command": "pro-bro.query",
                    "when": "view == pro-bro-tables",
                    "group": "inline"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run esbuild-base -- --minify",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
        "test-compile": "tsc -p ./",
        "compile": "npm-run-all compile:*",
        "watch": "npm-run-all -p watch:*",
        "compile:extension": "tsc -p ./",
        "compile:views": "webpack --mode development",
        "watch:extension": "tsc -watch -p ./",
        "watch:views": "webpack --watch --mode development",
        "test": "npm run compile && node ./node_modules/vscode/bin/test",
        "jestTest": "jest",
        "vsce": "vsce package"
    },
    "devDependencies": {
        "@babel/core": "^7.21.0",
        "@babel/preset-env": "^7.20.2",
        "@babel/preset-typescript": "^7.21.0",
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.1",
        "@types/node": "14.x",
        "@types/react": "^18.0.12",
        "@types/react-dom": "^18.0.5",
        "@types/vscode": "^1.67.0",
        "@typescript-eslint/eslint-plugin": "^5.21.0",
        "@typescript-eslint/parser": "^5.21.0",
        "@vscode/test-electron": "^2.1.3",
        "babel-jest": "^29.4.3",
        "css-loader": "^6.7.1",
        "eslint": "^8.14.0",
        "glob": "^8.0.1",
        "jest": "^29.4.3",
        "mocha": "^9.2.2",
        "npm-run-all": "^4.1.5",
        "style-loader": "^3.3.1",
        "ts-loader": "^9.3.0",
        "typescript": "^4.6.4",
        "webpack": "^5.73.0",
        "webpack-cli": "^4.9.2"
    },
    "dependencies": {
        "@emotion/react": "^11.10.0",
        "@emotion/styled": "^11.10.0",
        "@mui/icons-material": "^5.10.2",
        "@mui/material": "^5.10.2",
        "@types/uuid": "^9.0.1",
        "bootstrap": "^5.2.0",
        "esbuild": "^0.17.5",
        "export-from-json": "^1.6.0",
        "faker": "^5.5.3",
        "fs": "^0.0.1-security",
        "html-webpack-plugin": "^5.5.3",
        "path": "^0.12.7",
        "raw-loader": "^4.0.2",
        "react": "^18.1.0",
        "react-data-grid": "7.0.0-beta.13",
        "react-dom": "^18.1.0",
        "react-markdown": "^8.0.7",
        "react-table": "^7.8.0",
        "reactjs-popup": "^2.0.5",
        "uuid": "^9.0.0"
    }
}